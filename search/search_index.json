{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "", "text": "Tip L'ic\u00f4ne repr\u00e9sentant 3 traits horizontaux permet d'acc\u00e9der au menu. Consignes Cours: Veillez \u00e0 toujours avoir imprim\u00e9 le chapitre suivant \u00e0 l'avance ainsi lorsque l'on passera \u00e0 un nouveau chapitre vous l'aurez \u00e0 votre disposition. TP: Terminez syst\u00e9matiquement de r\u00e9diger le dernier TP qui a eu lieu et pr\u00e9parez le suivant pour la prochaine s\u00e9ance de TP. Vid\u00e9os: \u00c0 visionner en accompagnement de l'\u00e9tude des diff\u00e9rents chapitres.", "title": "\ud83c\udfe1 Accueil"}, {"location": "corrections/", "text": "Corrections \u2693\ufe0e Les exercices corrig\u00e9s du livre sont \u00e0 faire en autonomie en plus des exercices \u00e9tudi\u00e9s en classe. Important: Comme dans les corrections ci-dessous, la r\u00e9daction d'un calcul se fait d'abord de fa\u00e7on litt\u00e9rale , le passage au num\u00e9rique se fait en dernier (et jamais seul). Remarque: Les corrections donn\u00e9es ici sont tr\u00e8s succinctes or une r\u00e9daction de qualit\u00e9 importe (phrases explicatives, sch\u00e9mas annot\u00e9s, conclusions, mises en perspective des r\u00e9sultats\u2026)", "title": "Corrections"}, {"location": "corrections/#corrections", "text": "Les exercices corrig\u00e9s du livre sont \u00e0 faire en autonomie en plus des exercices \u00e9tudi\u00e9s en classe. Important: Comme dans les corrections ci-dessous, la r\u00e9daction d'un calcul se fait d'abord de fa\u00e7on litt\u00e9rale , le passage au num\u00e9rique se fait en dernier (et jamais seul). Remarque: Les corrections donn\u00e9es ici sont tr\u00e8s succinctes or une r\u00e9daction de qualit\u00e9 importe (phrases explicatives, sch\u00e9mas annot\u00e9s, conclusions, mises en perspective des r\u00e9sultats\u2026)", "title": "Corrections"}, {"location": "documents/", "text": "Cours et TP \u2693\ufe0e Consignes Cours: Veillez \u00e0 toujours avoir imprim\u00e9 le chapitre suivant \u00e0 l'avance ainsi lorsque l'on passera \u00e0 un nouveau chapitre vous l'aurez \u00e0 votre disposition. Travaux Pratiques: Terminez syst\u00e9matiquement de r\u00e9diger l'activit\u00e9 qui a eu lieu et pr\u00e9parez la suivante pour la prochaine s\u00e9ance de TP. Exercices: Pr\u00e9parer et savoir refaire les exercices est primordial. Si Correlyce ne fonctionne pas, vous trouverez ici des captures d'\u00e9cran des \u00e9nonc\u00e9s d'exercices. Chapitre 1 \u2693\ufe0e Corps purs et m\u00e9langes \ud83d\udcdaChapitre I \u269b\ufe0fActivit\u00e9 1 Corps pur et m\u00e9lange Exercices du livre (chap 1 pages 28 \u00e0 36) Chapitre 2 \u2693\ufe0e Solutions aqueuses \ud83d\udcdaChapitre II \u269b\ufe0fActivit\u00e9 2 Pr\u00e9paration d'une solution par dissolution \u269b\ufe0fActivit\u00e9 3 Pr\u00e9paration d'une solution par dilution \u269b\ufe0fActivit\u00e9 4 Concentration en masse et masse volumique Exercices du livre (chap2 pages 52 \u00e0 60) Chapitre 3 \u2693\ufe0e Description des mouvements \ud83d\udcdaChapitre III \u269b\ufe0fActivit\u00e9 5 Vitesse d'un syst\u00e8me \u269b\ufe0fActivit\u00e9 6 Vecteurs d\u00e9placement et vitesse Exercices du livre (chap9 pages 178 \u00e0 186) Chapitre 4 \u2693\ufe0e Mod\u00e9liser une action m\u00e9canique \u269b\ufe0fActivit\u00e9 7 Actions r\u00e9ciproques Exercices du livre (chap10 pages 200 \u00e0 206) Chapitre 5 \u2693\ufe0e Principe d'inertie \ud83d\udcdaChapitre V \u269b\ufe0fActivit\u00e9 8 Le principe d'inertie Exercices du livre (chap11 pages 216 \u00e0 222) Chapitre 6 \u2693\ufe0e De l'atome \u00e0 l\u2019\u00e9l\u00e9ment chimique \ud83d\udcdaChapitre VI \u269b\ufe0fActivit\u00e9 9 Histoire de l'atome Exercices du livre (chap3 pages 71 \u00e0 76) Chapitre 7 \u2693\ufe0e Vers des entit\u00e9s plus stables \ud83d\udcdaChapitre VII \u269b\ufe0fActivit\u00e9 10 Familles chimiques \u269b\ufe0fActivit\u00e9 11 Formation des ions \u269b\ufe0fActivit\u00e9 12 Mod\u00e8le de Lewis Exercices du livre (chap4 pages 90 \u00e0 98) Chapitre 8 \u2693\ufe0e \u00c9mission et perception d'un son \ud83d\udcdaChapitre VIII \u269b\ufe0fActivit\u00e9 13 Mesure de la vitesse du son \u269b\ufe0fActivit\u00e9 14 Analyse d'un son Exercices du livre (chap12 pages 237 \u00e0 246) Chapitre 9 \u2693\ufe0e Transformations physiques \ud83d\udcdaChapitre IX \u269b\ufe0fActivit\u00e9 15 \u00c9nergie et changement d'\u00e9tat Exercices du livre (chap6 pages 120 \u00e0 126) Chapitre 10 \u2693\ufe0e Transformations chimiques \ud83d\udcdaChapitre X \u269b\ufe0fActivit\u00e9 16 Trouver le r\u00e9actif limitant \u269b\ufe0fActivit\u00e9 17 Du gaspillage dans les vignes \u269b\ufe0fActivit\u00e9 18 Transformations chimiques et effet thermique \u269b\ufe0fActivit\u00e9 19 Ar\u00f4me de banane Exercices du livre (chap7 pages 140 \u00e0 148) Chapitre 11 \u2693\ufe0e R\u00e9fraction et r\u00e9flexion de la lumi\u00e8re \ud83d\udcdaChapitre XI \u269b\ufe0fActivit\u00e9 20 Lois de Snell-Descartes Exercices du livre (chap14 pages 279 \u00e0 286) Chapitre 12 \u2693\ufe0e Les lentilles convergentes \ud83d\udcdaChapitre XII \u269b\ufe0fActivit\u00e9 21 Lentille convergente Exercices du livre (chap 15 pages 298 \u00e0 304) Chapitre 13 \u2693\ufe0e Les spectres d'\u00e9mission \ud83d\udcdaChapitre XIII \u269b\ufe0fActivit\u00e9 22 Spectroscopie Exercices du livre (chap 13 pages 258 \u00e0 266) Chapitre 14 \u2693\ufe0e Les lois de l'\u00e9lectricit\u00e9 \ud83d\udcdaChapitre XIV \u269b\ufe0fActivit\u00e9 23 Exercices du livre (chap 16 pages 316 \u00e0 324)", "title": "Cours et TP"}, {"location": "documents/#cours-et-tp", "text": "Consignes Cours: Veillez \u00e0 toujours avoir imprim\u00e9 le chapitre suivant \u00e0 l'avance ainsi lorsque l'on passera \u00e0 un nouveau chapitre vous l'aurez \u00e0 votre disposition. Travaux Pratiques: Terminez syst\u00e9matiquement de r\u00e9diger l'activit\u00e9 qui a eu lieu et pr\u00e9parez la suivante pour la prochaine s\u00e9ance de TP. Exercices: Pr\u00e9parer et savoir refaire les exercices est primordial. Si Correlyce ne fonctionne pas, vous trouverez ici des captures d'\u00e9cran des \u00e9nonc\u00e9s d'exercices.", "title": "Cours et TP"}, {"location": "documents/#chapitre-1", "text": "Corps purs et m\u00e9langes \ud83d\udcdaChapitre I \u269b\ufe0fActivit\u00e9 1 Corps pur et m\u00e9lange Exercices du livre (chap 1 pages 28 \u00e0 36)", "title": "Chapitre 1"}, {"location": "documents/#chapitre-2", "text": "Solutions aqueuses \ud83d\udcdaChapitre II \u269b\ufe0fActivit\u00e9 2 Pr\u00e9paration d'une solution par dissolution \u269b\ufe0fActivit\u00e9 3 Pr\u00e9paration d'une solution par dilution \u269b\ufe0fActivit\u00e9 4 Concentration en masse et masse volumique Exercices du livre (chap2 pages 52 \u00e0 60)", "title": "Chapitre 2"}, {"location": "documents/#chapitre-3", "text": "Description des mouvements \ud83d\udcdaChapitre III \u269b\ufe0fActivit\u00e9 5 Vitesse d'un syst\u00e8me \u269b\ufe0fActivit\u00e9 6 Vecteurs d\u00e9placement et vitesse Exercices du livre (chap9 pages 178 \u00e0 186)", "title": "Chapitre 3"}, {"location": "documents/#chapitre-4", "text": "Mod\u00e9liser une action m\u00e9canique \u269b\ufe0fActivit\u00e9 7 Actions r\u00e9ciproques Exercices du livre (chap10 pages 200 \u00e0 206)", "title": "Chapitre 4"}, {"location": "documents/#chapitre-5", "text": "Principe d'inertie \ud83d\udcdaChapitre V \u269b\ufe0fActivit\u00e9 8 Le principe d'inertie Exercices du livre (chap11 pages 216 \u00e0 222)", "title": "Chapitre 5"}, {"location": "documents/#chapitre-6", "text": "De l'atome \u00e0 l\u2019\u00e9l\u00e9ment chimique \ud83d\udcdaChapitre VI \u269b\ufe0fActivit\u00e9 9 Histoire de l'atome Exercices du livre (chap3 pages 71 \u00e0 76)", "title": "Chapitre 6"}, {"location": "documents/#chapitre-7", "text": "Vers des entit\u00e9s plus stables \ud83d\udcdaChapitre VII \u269b\ufe0fActivit\u00e9 10 Familles chimiques \u269b\ufe0fActivit\u00e9 11 Formation des ions \u269b\ufe0fActivit\u00e9 12 Mod\u00e8le de Lewis Exercices du livre (chap4 pages 90 \u00e0 98)", "title": "Chapitre 7"}, {"location": "documents/#chapitre-8", "text": "\u00c9mission et perception d'un son \ud83d\udcdaChapitre VIII \u269b\ufe0fActivit\u00e9 13 Mesure de la vitesse du son \u269b\ufe0fActivit\u00e9 14 Analyse d'un son Exercices du livre (chap12 pages 237 \u00e0 246)", "title": "Chapitre 8"}, {"location": "documents/#chapitre-9", "text": "Transformations physiques \ud83d\udcdaChapitre IX \u269b\ufe0fActivit\u00e9 15 \u00c9nergie et changement d'\u00e9tat Exercices du livre (chap6 pages 120 \u00e0 126)", "title": "Chapitre 9"}, {"location": "documents/#chapitre-10", "text": "Transformations chimiques \ud83d\udcdaChapitre X \u269b\ufe0fActivit\u00e9 16 Trouver le r\u00e9actif limitant \u269b\ufe0fActivit\u00e9 17 Du gaspillage dans les vignes \u269b\ufe0fActivit\u00e9 18 Transformations chimiques et effet thermique \u269b\ufe0fActivit\u00e9 19 Ar\u00f4me de banane Exercices du livre (chap7 pages 140 \u00e0 148)", "title": "Chapitre 10"}, {"location": "documents/#chapitre-11", "text": "R\u00e9fraction et r\u00e9flexion de la lumi\u00e8re \ud83d\udcdaChapitre XI \u269b\ufe0fActivit\u00e9 20 Lois de Snell-Descartes Exercices du livre (chap14 pages 279 \u00e0 286)", "title": "Chapitre 11"}, {"location": "documents/#chapitre-12", "text": "Les lentilles convergentes \ud83d\udcdaChapitre XII \u269b\ufe0fActivit\u00e9 21 Lentille convergente Exercices du livre (chap 15 pages 298 \u00e0 304)", "title": "Chapitre 12"}, {"location": "documents/#chapitre-13", "text": "Les spectres d'\u00e9mission \ud83d\udcdaChapitre XIII \u269b\ufe0fActivit\u00e9 22 Spectroscopie Exercices du livre (chap 13 pages 258 \u00e0 266)", "title": "Chapitre 13"}, {"location": "documents/#chapitre-14", "text": "Les lois de l'\u00e9lectricit\u00e9 \ud83d\udcdaChapitre XIV \u269b\ufe0fActivit\u00e9 23 Exercices du livre (chap 16 pages 316 \u00e0 324)", "title": "Chapitre 14"}, {"location": "fiches-methodes/", "text": "Fiches m\u00e9thode \u2693\ufe0e Chimie \u2693\ufe0e Fiche m\u00e9thode Protocoles de pr\u00e9paration des solutions Outils num\u00e9riques \u2693\ufe0e Fiche m\u00e9thode Atelier Scientifique pour la relation de conjugaison Fiche m\u00e9thode Prise en main de jmol Fiche m\u00e9thode Python", "title": "Fiches m\u00e9thode"}, {"location": "fiches-methodes/#fiches-methode", "text": "", "title": "Fiches m\u00e9thode"}, {"location": "fiches-methodes/#chimie", "text": "Fiche m\u00e9thode Protocoles de pr\u00e9paration des solutions", "title": "Chimie"}, {"location": "fiches-methodes/#outils-numeriques", "text": "Fiche m\u00e9thode Atelier Scientifique pour la relation de conjugaison Fiche m\u00e9thode Prise en main de jmol Fiche m\u00e9thode Python", "title": "Outils num\u00e9riques"}, {"location": "millimetre/", "text": "Papier millim\u00e9tr\u00e9 \u2693\ufe0e Ouvrir dans un nouvel onglet", "title": "Papier millim\u00e9tr\u00e9"}, {"location": "millimetre/#papier-millimetre", "text": "Ouvrir dans un nouvel onglet", "title": "Papier millim\u00e9tr\u00e9"}, {"location": "python/", "text": "Python en Physique-Chimie \u2693\ufe0e Chapitre 1 \u2693\ufe0e Exercice 1 : Corps pur ou m\u00e9lange \u00c9nonc\u00e9 Le programme suivant doit permettre de d\u00e9terminer si l'on a affaire \u00e0 un corps pur ou \u00e0 un m\u00e9lange. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 # Corps pur ou m\u00e9lange observation = input ( \"La temp\u00e9rature du corps est-elle constante lors du changement d'\u00e9tat ? \" ) if observation == \"je r\u00e9fl\u00e9chis\" : print ( \"Il s'agit d'un corps pur car la temp\u00e9rature de changement d'\u00e9tat d'un corps pur est constante.\" ) else : print ( \"Il s'agit d'un m\u00e9lange car la temp\u00e9rature de changement d'\u00e9tat d'un m\u00e9lange n'est pas constante.\" ) \u00c0 la ligne 3, faut-il remplacer la cha\u00eene de caract\u00e8re \"je r\u00e9fl\u00e9chis\" par oui (sans guillemets) ou par non (sans guillemets) ou par la cha\u00eene de caract\u00e8re \"oui\" ou par la cha\u00eene de caract\u00e8re \"non\" ? Tester le programme pour s'assurer que le choix fait est le bon. Autres sources d'erreurs qui concernent la syntaxe : Ne mettre qu'un seul = dans le test de comparaison \u00e0 la ligne 3 puis tester le programme. Que constate-t-on ? Retirer le caract\u00e8re : \u00e0 la fin de la ligne 3 ou \u00e0 la fin de la ligne 5 et tester le programme. Que constate-t-on ? Retirer les indentations (c'est-\u00e0-dire le d\u00e9calage) au d\u00e9but des lignes 4 et 6 et tester le programme. Que constate-t-on ? Donn\u00e9es : Python souhaite une information de l'utilisateur : input() retourne la saisie de l'utilisateur sous forme de cha\u00eene de caract\u00e8re. Comme tous les langages de programmation, Python a des exigences de syntaxe. Il convient de les respecter. Chapitre 2 \u2693\ufe0e Exercice 2 : D\u00e9terminer une concentration (chap02 ex 28 p 56) \u00c9nonc\u00e9 Le programme suivant permet de d\u00e9terminer la concentration en masse de chlorure de sodium d\u2019une solution. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 # D\u00e9terminer une concentration (chap02 ex 28 p 56) m = float ( input ( \"Masse de chlorure de sodium en g : \" )) V = float ( input ( \"Volume de la solution en L : \" )) t = m / V if t > 360 : print ( \"La concentration en masse t = 360 g/L\" ) else : print ( \"La concentration en masse :\" , t , \"g/L\" ) Donner le mode de pr\u00e9paration de la solution S La ligne 1 correspond \u00e0 un commentaire. Par quel caract\u00e8re doit-on commencer une ligne de commentaire ? Pr\u00e9ciser l\u2019objectif de float() aux lignes 2 et 3. Donner le nom de la fonction python utilis\u00e9e aux lignes 6 et 8 qui permet d'afficher un message \u00e0 l'\u00e9cran. Modifier le programme afin de pouvoir d\u00e9terminer la masse \u00e0 pr\u00e9lever connaissant la concentration et le volume. Donn\u00e9es : \u00c0 temp\u00e9rature ambiante, la concentration maximale en chlorure de sodium d\u2019une solution est \u00e9gale \u00e0 360 g\u00b7L \u20131 . Python et les nombres : python manipule soit des nombres entiers ( int ) comme 360 soit des nombres r\u00e9els ( float ) comme 3,14. Python souhaite une information de l'utilisateur : input() retourne la saisie de l'utilisateur sous forme de cha\u00eene de caract\u00e8re. Chapitre 3 \u2693\ufe0e Exercice 3 : Tracer les vecteurs vitesse avec pyplot (32 p 184) \u00c9nonc\u00e9 Les positions du syst\u00e8me, ainsi que les instants t ont \u00e9t\u00e9 extraits d'un pointage. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # Tracer les vecteurs vitesse (capytale c09e32p184) import matplotlib.pyplot as plt x = [ 0.0257 , 0.2877 , 0.5549 , 0.8118 , 1.0842 , 1.3256 , 1.6031 ] y = [ 1.0944 , 1.4387 , 1.5980 , 1.6133 , 1.4849 , 1.2177 , 0.7810 ] t = [ 0 , 0.125 , 0.25 , 0.375 , 0.5 , 0.625 , 0.75 ] # Calcul des composantes Vx et Vy Vx = [] for i in range ( len ( x ) - 1 ) : Vxi = [( x [ i + 1 ] - x [ i ]) / ( t [ i + 1 ] - t [ i ])] Vx = Vx + Vxi Vy = [] for i in range ( len ( y ) - 1 ) : Vyi = [( y [ i + 1 ] - y [ i ]) / ( t [ i + 1 ] - t [ i ])] Vy = Vy + Vyi # pr\u00e9paration de la zone graphique plt . grid () plt . title ( \"Repr\u00e9sentation du vecteur vitesse\" ) plt . xlabel ( \"$x$ (m)\" ) plt . ylabel ( \"$y$ (m)\" ) # trac\u00e9 des points de la trajectoire plt . plot ( x , y , 'ro' ) # trac\u00e9 des vecteurs vitesse avec un facteur d'\u00e9chelle for i in range ( len ( t ) - 1 ): plt . arrow ( x [ i ], y [ i ], Vx [ i ] / 10 , Vy [ i ] / 10 , head_width = 0.03 , head_length = 0.03 , color = \"blue\" ) plt . text ( x [ i ] + 0.05 , y [ i ], r \"$\\vec {v} $\" + str ( i + 1 ), color = \"blue\" ) # L\u00e9gende plt . text ( 0.1 , 0.8 , \"Echelle 1 cm $\\leftrightarrow$ 10 cm/s\" , color = \"blue\" ) plt . show () Rep\u00e9rer dans le programme les lignes correspondant aux donn\u00e9es extraites du pointage. Rep\u00e9rer de m\u00eame la (ou les) ligne(s) permettant de repr\u00e9senter les vecteurs vitesse. Extraire de cette (ou ces) ligne(s) le facteur de repr\u00e9sentation des vecteurs vitesse. Proposer une modification du programme pour avoir un facteur de repr\u00e9sentation des vecteurs vitesse de 1/15. Chapitre 4 \u2693\ufe0e Exercice 4 : Calculer une force d'interaction gravitationnelle (chap10 ex 9 p 201) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 G = 6.67E-11 # en N.m2/kg2 d = float ( input ( \"d (en m) = \" )) m1 = float ( input ( \"m1 (en kg) = \" )) F = G * m1 * m2 / d ** 2 print ( \"F =\" , F , \"N\" ) Syntaxe : indiquer \u00e0 quoi correspond le E \u00e0 la ligne 1. \u00c9crire la ligne 4 permettant de demander m2 \u00e0 l'utilisateur. Ex\u00e9cuter le script pour calculer la valeur de la force de l'exercice 9 p 201 (en utilisant E pour saisir ais\u00e9ment les valeurs de la formule). Donner le r\u00e9sultat en notation scientifique avec 2 chiffres significatifs. Chapitre 5 \u2693\ufe0e Exercice 5 : Galil\u00e9e et la chute des corps (chap11 ex 14 p 218) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 t = [ 0 , 0.04 , 0.08 , 0.12 , 0.16 , 0.20 , 0.24 ] d = [ 4.9 * dt ** 2 for dt in t ] v = [( d [ i + 1 ] - d [ i ]) / ( t [ i + 1 ] - t [ i ]) for i in range ( len ( t ) - 1 )] l = [ round ( 2 * vitesse , 1 ) for vitesse in v ] print ( \"t (en s):\" , t ) print ( \"d (en m):\" , d ) print ( \"v (en m/s):\" , v ) print ( \"l (en cm)\" , l ) Quelle ligne du programme utilise la relation de proportionnalit\u00e9 \u00e9voqu\u00e9e par Galil\u00e9e ? Quelle est la syntaxe Python pour \u00e9lever au carr\u00e9 ? Remplir le tableau de l'exercice 14 p 218 \u00e0 la main (et calculatrice) puis ex\u00e9cuter le script pour v\u00e9rifier les r\u00e9ponses. Apr\u00e8s ex\u00e9cution du script python t , d , v et l sont des listes de valeurs. En se r\u00e9f\u00e9rant \u00e0 l'\u00e9nonc\u00e9 de l'exercice 14 p218, indiquer \u00e0 quoi correspondent les valeurs de la liste l . Chapitre 6 \u2693\ufe0e Exercice 6 : Masse approch\u00e9e d'un atome (chap03 ex 9 p 72) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # Masse approch\u00e9e d'un atome Z = int ( input ( \"Nombre de protons: \" )) rep = int ( input ( \"Nombre d'\u00e9lectrons: \" )) if rep != Z : print ( \"Faux. Un atome est neutre donc il a autant d'\u00e9lectrons que de protons.\" ) N = int ( input ( \"Nombre de neutrons: \" )) m_nucleon = 1.67E-27 m_electron = m_nucleon / 1836 m_noyau = m_nucleon * ( Z + N ) m_atome = m_noyau + m_electron * Z print ( \"masse du noyau :\" , m_noyau ) print ( \"masse de l'atome :\" , m_atome ) Syntaxe : indiquer la signification de != dans le test effectu\u00e9 \u00e0 la ligne 4. Ex\u00e9cuter le script pour r\u00e9pondre \u00e0 l'exercice 9 p 72. Quel est le calcul simple permettant d'obtenir la masse approch\u00e9e d'un atome ? Pourquoi parle-t-on de masse approch\u00e9e ? Chapitre 7 \u2693\ufe0e Exercice 7 : Obtenir une configuration \u00e9lectronique (chap04 ex 33 p 95) \u00c9nonc\u00e9 Correction Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # Obtenir une configuration \u00e9lectronique (capytale c04e33p95) Z = int ( input ( \"Que vaut Z (Z < 18) ?\" )) ne = Z # (1) # initialisation: les sous-couches \u00e9lectroniques sont vides n1s = 0 n2s , n2p = 0 , 0 n3s , n3p = 0 , 0 # Remplir sous-couche 1s while ( ne > 0 ) and ( n1s < 2 ): # (4) n1s += 1 # (2) ne -= 1 # (3) if ( ne == 0 ) or ( n1s == 2 ): config = \" 1s\" + str ( n1s ) # (5) # Remplir sous-couche 2s while ( ne > 0 ) and ( n2s < 2 ): n2s += 1 ne -= 1 if ( ne == 0 ) or ( n2s == 2 ): config = config + \" 2s\" + str ( n2s ) # (6) # Remplir sous-couche 2p while ( ne > 0 ) and ( n2p < 6 ): n2p += 1 ne -= 1 if ( ne == 0 ) or ( n2p == 6 ): config = config + \" 2p\" + str ( n2p ) # (7) # Remplir sous-couche 3s while ( ne > 0 ) and ( n3s < 2 ): n3s += 1 ne -= 1 if ( ne == 0 ) or ( n3s == 2 ): config = config + \" 3s\" + str ( n3s ) # (8) # Remplir sous-couche 3p if ne > 0 : print ( \"hors programme\" ) else : print ( \"Pour Z =\" , Z , \"la configuration \u00e9lectronique est\" , config ) Nombre d'\u00e9lectrons \u00e0 placer sur les diff\u00e9rentes sous-couches Incr\u00e9mente le nombre d'\u00e9lectrons sur la sous-couche 1s D\u00e9cr\u00e9mente le nombre total d'\u00e9lectrons restant \u00e0 placer Tant qu'il reste des \u00e9lectrons \u00e0 placer et que la sous-couche 1s n'est pas pleine, continuer de remplir la sous-couche 1s Commence une cha\u00eene de caract\u00e8res qui va d\u00e9buter par 1s suivi du nombre d'\u00e9lectrons sur cette sous couche. La fonction str() transforme un entier en chaine de caract\u00e8re Prolonge la cha\u00eene nomm\u00e9e config Prolonge la cha\u00eene nomm\u00e9e config Prolonge la cha\u00eene nomm\u00e9e config En utilisant le script d\u00e9terminer la configuration \u00e9lectronique de l'h\u00e9lium \\(He\\) (Z = 2) et du berrylium \\(Be\\) (Z = 4). Compl\u00e9ter le script pour la sous-couche 3p En utilisant le script d\u00e9terminer la configuration \u00e9lectronique de l'alluminium \\(A\\ell\\) (Z = 13). \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # Obtenir une configuration \u00e9lectronique (capytale c04e33p95) Z = int ( input ( \"Que vaut Z (Z < 18) ?\" )) ne = Z # (1) # initialisation: les sous-couches \u00e9lectroniques sont vides n1s = 0 n2s , n2p = 0 , 0 n3s , n3p = 0 , 0 # Remplir sous-couche 1s while ( ne > 0 ) and ( n1s < 2 ): # (4) n1s += 1 # (2) ne -= 1 # (3) if ( ne == 0 ) or ( n1s == 2 ): config = \" 1s\" + str ( n1s ) # (5) # Remplir sous-couche 2s while ( ne > 0 ) and ( n2s < 2 ): n2s += 1 ne -= 1 if ( ne == 0 ) or ( n2s == 2 ): config = config + \" 2s\" + str ( n2s ) # Remplir sous-couche 2p while ( ne > 0 ) and ( n2p < 6 ): n2p += 1 ne -= 1 if ( ne == 0 ) or ( n2p == 6 ): config = config + \" 2p\" + str ( n2p ) # Remplir sous-couche 3s while ( ne > 0 ) and ( n3s < 2 ): n3s += 1 ne -= 1 if ( ne == 0 ) or ( n3s == 2 ): config = config + \" 3s\" + str ( n3s ) # Remplir sous-couche 3p while ( ne > 0 ) and ( n3p < 6 ): n3p += 1 ne -= 1 if ( ne == 0 ) or ( n3p == 6 ): config = config + \" 3p\" + str ( n3p ) if ne > 0 : print ( \"hors programme\" ) else : print ( \"Pour Z =\" , Z , \"la configuration \u00e9lectronique est\" , config ) Chapitre 8 \u2693\ufe0e Exercice 8 : Fonction p\u00e9riodique (chap12 ex 23 p 241) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import matplotlib.pyplot as plt import numpy as np # Cr\u00e9ation d'une variable temps, t, dont 1000 valeurs sont comprises entre 0 et 0,1 seconde t = np . linspace ( 0 , 0.1 , 1000 ) # valeur .... f = 100 f1 = 100 # D\u00e9finition des fonctions y et y1 (et y2 \u00e0 compl\u00e9ter) y = 3 * np . sin ( 2 * np . pi * f * t ) y1 = 3 * np . sin ( 2 * np . pi * f1 * t ) + 3 * np . sin ( 4 * np . pi * f1 * t ) # Trac\u00e9 des courbes sous forme de graphiques empil\u00e9s dans une grille et mise en place de la l\u00e9gende plt . gcf () . subplots_adjust ( hspace = 0.8 ) # (1) plt . title ( \"Acquisition de deux signaux sonores\" ) # Trac\u00e9 de y plt . subplot ( 2 , 1 , 1 ) # (2) plt . xlabel ( \"$t$ (en s)\" ) plt . ylabel ( \"$y$\" ) plt . grid () plt . plot ( t , y , color = 'blue' ) # Trac\u00e9 de y1 plt . subplot ( 2 , 1 , 2 ) # (3) plt . plot ( t , y1 , color = 'red' ) plt . xlabel ( \"$t$ (en s)\" ) plt . ylabel ( \"$y_1$\" ) plt . grid () # Trac\u00e9 de y2 (\u00e0 compl\u00e9ter) # (4) # Affichage de la figure plt . show () height space (espace en hauteur) entre lignes de la grille. Au besoin, utiliser wspace comme width space pour r\u00e9gler l'espace en largeur entre colonnes. Dans une grille de 2 lignes x 1 colonne, la figure est plac\u00e9e en 1re ligne. \u00c0 modifier \u00e0 la question 6. Dans une grille de 2 lignes x 1 colonne, la figure est plac\u00e9e en 2e ligne. \u00c0 modifier \u00e0 la question 6. On peut \u00e9galement sauvegarder l'image dans le r\u00e9pertoire du script avec plt.savefig(\"image.png\") D\u00e9terminer graphiquement la p\u00e9riode de chacune des fonctions correspondant aux courbes Calculer la fr\u00e9quence de chacune de ces deux fonctions. Compl\u00e9ter le commentaire de la ligne 8 du programme. \u00c0 l\u2019aide de la repr\u00e9sentation temporelle de la fonction y , indiquer ce que repr\u00e9sente le nombre 3 dans la ligne 13 du programme. Sous le trac\u00e9 des deux fonctions pr\u00e9c\u00e9dentes, on souhaite tracer une nouvelle fonction y2 qui est sinuso\u00efdale, de p\u00e9riode T \u00e9gale \u00e0 0,020 s et d\u2019amplitude \u00e9gale \u00e0 4. Modifier le programme ( f2 = ? ; y2 = ? ; Trac\u00e9 de y2) pour afficher le trac\u00e9 des trois fonctions. Utiliser plt.subplot(3, 1, 1) , plt.subplot(3, 1, 2) et plt.subplot(3, 1, 3) pour placer les sous figures dans une grille 3x1. Chapitre 9 \u2693\ufe0e Exercice 9 : D\u00e9crire des \u00e9tats physiques (chap06 ex 4 p 121) \u00c9nonc\u00e9 On a mesur\u00e9 la temp\u00e9rature au cours du temps lors de la solidification du cyclohexane. Ouvrir et tester le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # D\u00e9crire des \u00e9tats physiques import matplotlib.pyplot as plt t = [ 0 , 2 , 4 , 6 , 8 , 10 ] # (en min) T = 16.0 , 11.5 , 6.5 , 6.5 , 6.0 , 1.51 # (en \u00b0C) # pr\u00e9paration de la zone graphique plt . grid () plt . title ( \"Donner un titre\" ) plt . xlabel ( \".....(en min)\" ) plt . ylabel ( \"..... (en \u00b0C)\" ) # trac\u00e9 des points de la trajectoire plt . plot ( t , T , 'ro-' ) plt . show () Syntaxe : Python est sensible \u00e0 la \"casse\" c'est-\u00e0-dire qu'il distingue les majuscules et les minuscules. Dans ce script que repr\u00e9sentent les variables t et T ? Lignes 7, 8 et 9 donner un titre au graphique et annoter les axes. Ex\u00e9cuter le script pour tracer le graphique repr\u00e9sentant l\u2019\u00e9volution de la temp\u00e9rature au cours du temps. Identifier les \u00e9tats physiques par lesquels passe le cyclohexane au cours du temps. Chapitre 10 \u2693\ufe0e Exercice 10 : Chromatographie sur couche mince (CCM) \u00c9nonc\u00e9 Script python Objectifs : Savoir lire un chromatogramme CCM. Identifier les constituants d\u2019un m\u00e9lange par comparaison avec des esp\u00e8ces de r\u00e9f\u00e9rence. Utiliser un programme Python pour s\u2019entra\u00eener. Travail demand\u00e9: Lancer le programme Python dans Capytale ( code: 7e20-6893103 ) puis ex\u00e9cuter une cellule apr\u00e8s l'autre. Observer le chromatogramme g\u00e9n\u00e9r\u00e9. Analyser le d\u00e9p\u00f4t de synth\u00e8se : d\u2019apr\u00e8s les positions des taches migr\u00e9es du m\u00e9lange (Synth\u00e8se), indiquer si l'esp\u00e8ce A est pr\u00e9sente. Indiquer si l'esp\u00e8ce B est pr\u00e9sente. V\u00e9rifier vos r\u00e9ponses gr\u00e2ce \u00e0 la correction automatique propos\u00e9e par le programme. Refaire plusieurs fois la proc\u00e9dure. Import des modules et param\u00e8tres de la plaque \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt import random # Param\u00e8tres de la plaque largeur_plaque = 4 # cm hauteur_plaque = 8 # cm ligne_depot = 1 # cm # Front de l'\u00e9luant (al\u00e9atoire \u00e0 chaque exercice) front = random . uniform ( 6 , 7.5 ) # (1) # Positions horizontales des d\u00e9p\u00f4ts # 1 : R\u00e9f\u00e9rence A # 2 : R\u00e9f\u00e9rence B # 3 : Produit de synth\u00e8se La m\u00e9thode uniform () renvoie un nombre flottant al\u00e9atoire entre les deux nombres sp\u00e9cifi\u00e9s (tous deux inclus). Simulation de l'existence et des positions al\u00e9atoires des taches \ud83d\udc0d Script Python 16 17 18 19 20 21 22 23 24 25 26 # Rf des r\u00e9f\u00e9rences (valeurs r\u00e9alistes et bien s\u00e9par\u00e9es) Rf_A = round ( random . uniform ( 0.2 , 0.5 ), 2 ) Rf_B = round ( random . uniform ( 0.55 , 0.9 ), 2 ) # Pr\u00e9sence ou non des esp\u00e8ces dans le m\u00e9lange synth\u00e9tis\u00e9 contient_A = random . choice ([ True , False ]) contient_B = random . choice ([ True , False ]) # ordonn\u00e9es des taches yA = ligne_depot + Rf_A * ( front - ligne_depot ) yB = ligne_depot + Rf_B * ( front - ligne_depot ) Affichage de la chromatographie \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 plt . figure ( figsize = ( 4 , 8 )) # Plaque CCM (un rectangle est un polygone ferm\u00e9) x_rect = [ 0 , largeur_plaque , largeur_plaque , 0 , 0 ] # (1) y_rect = [ 0 , 0 , hauteur_plaque , hauteur_plaque , 0 ] # (2) plt . fill ( x_rect , y_rect , facecolor = 'white' , edgecolor = 'black' , linewidth = 2 ) # (3) # Front de l'\u00e9luant plt . plot ([ 0 , largeur_plaque ], [ front , front ], '--' , color = 'grey' , label = \"Front de l'\u00e9luant\" ) # Ligne de d\u00e9p\u00f4ts plt . plot ([ 0 , largeur_plaque ], [ ligne_depot , ligne_depot ], '-' , color = 'black' ) # D\u00e9p\u00f4ts plt . scatter ( 1 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 1 - 0.3 , 0.5 , 'R\u00e9f A' , fontsize = 12 ) plt . scatter ( 2 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 2 - 0.3 , 0.5 , 'R\u00e9f B' , fontsize = 12 ) plt . scatter ( 3 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 3 - 0.5 , 0.5 , 'Synth\u00e8se' , fontsize = 12 ) # Tracer les taches migr\u00e9es plt . scatter ( 1 , yA , s = 400 , color = 'lightgrey' , edgecolor = 'black' ) plt . scatter ( 2 , yB , s = 400 , color = 'grey' , edgecolor = 'black' ) if contient_A : plt . scatter ( 3 , yA , s = 400 , color = 'lightgrey' , edgecolor = 'black' ) if contient_B : plt . scatter ( 3 , yB , s = 400 , color = 'grey' , edgecolor = 'black' ) plt . xlim ( 0 , largeur_plaque ) plt . ylim ( 0 , hauteur_plaque ) plt . axis ( 'off' ) plt . title ( \"Chromatographie CCM\" ) plt . legend () plt . show () liste des abscisses des points du polygone ferm\u00e9 liste des ordonn\u00e9es des points du polygone ferm\u00e9 plt.fill() attend deux listes : la liste des abscisses et la liste des ordonn\u00e9es des points du polygone Questions \ud83d\udc0d Script Python 1 2 3 4 print ( \" \\n Analyse du produit de synth\u00e8se :\" ) reponse_A = input ( \"Le produit contient-il l'esp\u00e8ce A ? (oui/non) \" ) reponse_B = input ( \"Le produit contient-il l'esp\u00e8ce B ? (oui/non) \" ) Correction \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # Correction if ( reponse_A == 'oui' and contient_A ) or ( reponse_A == 'non' and not contient_A ): print ( \"\u2705 R\u00e9ponse correcte pour l'esp\u00e8ce A.\" ) else : print ( \"\u274c R\u00e9ponse incorrecte pour l'esp\u00e8ce A.\" ) if ( reponse_B == 'oui' and contient_B ) or ( reponse_B == 'non' and not contient_B ): print ( \"\u2705 R\u00e9ponse correcte pour l'esp\u00e8ce B.\" ) else : print ( \"\u274c R\u00e9ponse incorrecte pour l'esp\u00e8ce B.\" ) print ( \"Exercice termin\u00e9. \\n \" ) Chapitre 11 \u2693\ufe0e Exercice 11 : R\u00e9fraction \u00c9nonc\u00e9 Script python Objectifs : Savoir simuler un ph\u00e9nom\u00e8ne de r\u00e9fraction. Savoir donner un r\u00e9sultat en ayant un regard critique sur la pr\u00e9cision. Utiliser un programme Python pour s\u2019entra\u00eener. Travail demand\u00e9: Lancer le programme Python dans Capytale ( code: 892c-6894267 ) puis ex\u00e9cuter une cellule apr\u00e8s l'autre. Saisir les param\u00e8tres souhait\u00e9s (angle du rayon incident et indice des milieux) puis simuler le trajet du faisceau lumineux. V\u00e9rifier l'angle de r\u00e9fraction \u00e0 l'aide de la loi de Snell-Descartes Faire la partie compl\u00e9mentaire concernant la pr\u00e9cision du r\u00e9sultat. V\u00e9rifier vos r\u00e9ponses gr\u00e2ce \u00e0 la correction automatique propos\u00e9e par le programme. Refaire plusieurs fois la proc\u00e9dure. Import des modules \ud83d\udc0d Script Python 1 2 3 import numpy as np import matplotlib.pyplot as plt import matplotlib.patches as patches D\u00e9finition de nouvelles fonctions \ud83d\udc0d Script Python 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # Fonction de calcul de l'angle de r\u00e9fraction def calcul_refraction ( n1 , n2 , i_deg ): i_rad = np . radians ( i_deg ) sin_r = n1 / n2 * np . sin ( i_rad ) if abs ( sin_r ) > 1 : return None # R\u00e9flexion totale else : r_rad = np . arcsin ( sin_r ) r_deg = np . degrees ( r_rad ) return r_deg # Fonction de trac\u00e9 def tracer_refraction ( n1 , n2 , angle_incident ): angle_refracte = calcul_refraction ( n1 , n2 , angle_incident ) fig , ax = plt . subplots ( figsize = ( 8 , 8 )) # Trac\u00e9 du demi-cylindre (face courbe en bas) demi_cercle = patches . Wedge ( center = ( 0 , 0 ), r = 1 , theta1 = 180 , theta2 = 360 , facecolor = 'lightblue' , edgecolor = 'black' , alpha = 0.3 ) ax . add_patch ( demi_cercle ) # Surface plane plt . plot ([ - 1 , 1 ], [ 0 , 0 ], color = 'k' , alpha = 0.3 ) # Trac\u00e9 du rapporteur gradu\u00e9 for angle in range ( - 90 , 91 , 5 ): rad = np . radians ( angle ) x = np . sin ( rad ) y = np . cos ( rad ) ax . plot ([ 0 , x ], [ 0 , y ], color = 'lightgray' , lw = 0.5 ) ax . plot ([ 0 , - x ], [ 0 , - y ], color = 'lightgray' , lw = 0.5 ) if angle % 30 == 0 : plt . text ( 1.1 * np . sin ( rad ), 1.1 * np . cos ( rad ), f \" { abs ( angle ) } \u00b0\" , ha = 'center' , va = 'center' , fontsize = 10 ) plt . text ( - 1.1 * np . sin ( rad ), - 1.1 * np . cos ( rad ), f \" { abs ( angle ) } \u00b0\" , ha = 'center' , va = 'center' , fontsize = 10 ) # Rayon incident i_rad = np . radians ( angle_incident ) xi = - 2 * np . sin ( i_rad ) yi = 2 * np . cos ( i_rad ) ax . plot ([ xi , 0 ], [ yi , 0 ], color = 'red' , label = \"Rayon incident\" ) # Normale ax . plot ([ 0 , 0 ], [ - 1.2 , 1.2 ], 'k--' , alpha = 0.5 ) # Rayon r\u00e9fract\u00e9 if angle_refracte is not None : r_rad = np . radians ( angle_refracte ) xr = np . sin ( r_rad ) yr = - np . cos ( r_rad ) ax . plot ([ 0 , xr ], [ 0 , yr ], color = 'blue' , label = \"Rayon r\u00e9fract\u00e9\" ) plt . title ( f \"i = { angle_incident } \u00b0 ; r = { round ( angle_refracte , 1 ) } \u00b0\" ) else : plt . title ( f \"i = { angle_incident } \u00b0 ; R\u00e9flexion totale\" ) ax . set_xlim ( - 1.5 , 1.5 ) ax . set_ylim ( - 1.5 , 1.5 ) ax . set_aspect ( 'equal' ) plt . legend () plt . grid ( False ) ax . set_xticks ([]) ax . set_yticks ([]) plt . show () Simulation \ud83d\udc0d Script Python 67 68 69 70 71 72 # Exemple n_air = 1.00 n_plexiglas = 1.33 angle_incident = 70.0 tracer_refraction ( n_air , n_plexiglas , angle_incident ) Questions et correction \ud83d\udc0d Script Python 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 from random import choice r = calcul_refraction ( n_air , n_plexiglas , angle_incident ) A = \"a) La pr\u00e9cision d'un r\u00e9sultat d\u00e9pend de la pr\u00e9cision des donn\u00e9es utilis\u00e9es ? (oui/non) \" B = \"a) La pr\u00e9cision d'un r\u00e9sultat d\u00e9pend du nombre de d\u00e9cimales affich\u00e9es par la calculatrice ? (oui/non) \" C = f \"b) r = { r } \u00b0 est pr\u00e9f\u00e9rable \u00e0 r = { r : .1f } \u00b0 car \u00abc'est plus pr\u00e9cis\u00bb (oui/non) \" D = f \"b) r = { r : .1f } \u00b0 est pr\u00e9f\u00e9rable \u00e0 r = { r } car pr\u00e9tendre \u00eatre plus pr\u00e9cis est illusoire (oui/non) \" Q1 , Q2 = choice ([ A , B ]), choice ([ C , D ]) print ( \" \\n DONNER UN R\u00c9SULTAT NUM\u00c9RIQUE : \\n \" ) print ( f \"L'angle du rayon r\u00e9fract\u00e9 est de { r } degr\u00e9s ou de { r : .1f } degr\u00e9s ?\" ) reponse_1 = input ( Q1 ) reponse_2 = input ( Q2 ) # Correction if ( Q1 == A and reponse_1 == 'oui' ) or ( Q1 == B and reponse_1 == 'non' ): print ( \"\u2705 R\u00e9ponse 1 correcte \\n \" ) else : print ( \"\u274c R\u00e9ponse 1 incorrecte \\n \" ) if ( Q2 == C and reponse_2 == 'non' ) or ( Q2 == D and reponse_2 == 'oui' ): print ( \"\u2705 R\u00e9ponse 2 correcte \\n \" ) else : print ( \"\u274c R\u00e9ponse 2 incorrecte \\n \" ) print ( \"Exercice termin\u00e9. \\n \" ) Chapitre 12 \u2693\ufe0e Exercice 12 : Lentille \u00c9nonc\u00e9 Ouvrir et tester le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Fonction permettant de calculer la taille de l'image def calculer_taille_image ( AB , OA , OAprime ): AprimeBprime = AB * OAprime / OA return AprimeBprime # Les valeurs sont fournies par l'utilisateur AB = float ( input ( \"Donner la taille de l'objet AB en m\u00e8tre : \\n \" )) OA = float ( input ( \"Donner la distance OA en m\u00e8tre : \\n \" )) OAprime = float ( input ( \"Donner la distance OA' en m\u00e8tre : \\n \" )) # Calcul et affichage du r\u00e9sultat resultat = calculer_taille_image ( AB , OA , OAprime ) print ( \"La taille de l'image A'B' est\" , resultat , \"m.\" ) \u00c9crire un nouveau programme comportant la fonction calculer_position_image(AB, OA, AprimeBprime) qui permet de calculer OA\u2019 connaissant AB, OA et A'B' qui seront les valeurs fournies par l'utilisateur. Adapter la partie Calcul et affichage du r\u00e9sultat pour afficher la position de l'image. Chapitre 14 \u2693\ufe0e Exercice 13 : Parafoudre (chap16 ex 28 p320) \u00c9nonc\u00e9 R\u00e9aliser l'exercice dans Capytale", "title": "Python en Physique-Chimie"}, {"location": "python/#python-en-physique-chimie", "text": "", "title": "Python en Physique-Chimie"}, {"location": "python/#chapitre-1", "text": "Exercice 1 : Corps pur ou m\u00e9lange \u00c9nonc\u00e9 Le programme suivant doit permettre de d\u00e9terminer si l'on a affaire \u00e0 un corps pur ou \u00e0 un m\u00e9lange. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 # Corps pur ou m\u00e9lange observation = input ( \"La temp\u00e9rature du corps est-elle constante lors du changement d'\u00e9tat ? \" ) if observation == \"je r\u00e9fl\u00e9chis\" : print ( \"Il s'agit d'un corps pur car la temp\u00e9rature de changement d'\u00e9tat d'un corps pur est constante.\" ) else : print ( \"Il s'agit d'un m\u00e9lange car la temp\u00e9rature de changement d'\u00e9tat d'un m\u00e9lange n'est pas constante.\" ) \u00c0 la ligne 3, faut-il remplacer la cha\u00eene de caract\u00e8re \"je r\u00e9fl\u00e9chis\" par oui (sans guillemets) ou par non (sans guillemets) ou par la cha\u00eene de caract\u00e8re \"oui\" ou par la cha\u00eene de caract\u00e8re \"non\" ? Tester le programme pour s'assurer que le choix fait est le bon. Autres sources d'erreurs qui concernent la syntaxe : Ne mettre qu'un seul = dans le test de comparaison \u00e0 la ligne 3 puis tester le programme. Que constate-t-on ? Retirer le caract\u00e8re : \u00e0 la fin de la ligne 3 ou \u00e0 la fin de la ligne 5 et tester le programme. Que constate-t-on ? Retirer les indentations (c'est-\u00e0-dire le d\u00e9calage) au d\u00e9but des lignes 4 et 6 et tester le programme. Que constate-t-on ? Donn\u00e9es : Python souhaite une information de l'utilisateur : input() retourne la saisie de l'utilisateur sous forme de cha\u00eene de caract\u00e8re. Comme tous les langages de programmation, Python a des exigences de syntaxe. Il convient de les respecter.", "title": "Chapitre 1"}, {"location": "python/#chapitre-2", "text": "Exercice 2 : D\u00e9terminer une concentration (chap02 ex 28 p 56) \u00c9nonc\u00e9 Le programme suivant permet de d\u00e9terminer la concentration en masse de chlorure de sodium d\u2019une solution. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 # D\u00e9terminer une concentration (chap02 ex 28 p 56) m = float ( input ( \"Masse de chlorure de sodium en g : \" )) V = float ( input ( \"Volume de la solution en L : \" )) t = m / V if t > 360 : print ( \"La concentration en masse t = 360 g/L\" ) else : print ( \"La concentration en masse :\" , t , \"g/L\" ) Donner le mode de pr\u00e9paration de la solution S La ligne 1 correspond \u00e0 un commentaire. Par quel caract\u00e8re doit-on commencer une ligne de commentaire ? Pr\u00e9ciser l\u2019objectif de float() aux lignes 2 et 3. Donner le nom de la fonction python utilis\u00e9e aux lignes 6 et 8 qui permet d'afficher un message \u00e0 l'\u00e9cran. Modifier le programme afin de pouvoir d\u00e9terminer la masse \u00e0 pr\u00e9lever connaissant la concentration et le volume. Donn\u00e9es : \u00c0 temp\u00e9rature ambiante, la concentration maximale en chlorure de sodium d\u2019une solution est \u00e9gale \u00e0 360 g\u00b7L \u20131 . Python et les nombres : python manipule soit des nombres entiers ( int ) comme 360 soit des nombres r\u00e9els ( float ) comme 3,14. Python souhaite une information de l'utilisateur : input() retourne la saisie de l'utilisateur sous forme de cha\u00eene de caract\u00e8re.", "title": "Chapitre 2"}, {"location": "python/#chapitre-3", "text": "Exercice 3 : Tracer les vecteurs vitesse avec pyplot (32 p 184) \u00c9nonc\u00e9 Les positions du syst\u00e8me, ainsi que les instants t ont \u00e9t\u00e9 extraits d'un pointage. Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # Tracer les vecteurs vitesse (capytale c09e32p184) import matplotlib.pyplot as plt x = [ 0.0257 , 0.2877 , 0.5549 , 0.8118 , 1.0842 , 1.3256 , 1.6031 ] y = [ 1.0944 , 1.4387 , 1.5980 , 1.6133 , 1.4849 , 1.2177 , 0.7810 ] t = [ 0 , 0.125 , 0.25 , 0.375 , 0.5 , 0.625 , 0.75 ] # Calcul des composantes Vx et Vy Vx = [] for i in range ( len ( x ) - 1 ) : Vxi = [( x [ i + 1 ] - x [ i ]) / ( t [ i + 1 ] - t [ i ])] Vx = Vx + Vxi Vy = [] for i in range ( len ( y ) - 1 ) : Vyi = [( y [ i + 1 ] - y [ i ]) / ( t [ i + 1 ] - t [ i ])] Vy = Vy + Vyi # pr\u00e9paration de la zone graphique plt . grid () plt . title ( \"Repr\u00e9sentation du vecteur vitesse\" ) plt . xlabel ( \"$x$ (m)\" ) plt . ylabel ( \"$y$ (m)\" ) # trac\u00e9 des points de la trajectoire plt . plot ( x , y , 'ro' ) # trac\u00e9 des vecteurs vitesse avec un facteur d'\u00e9chelle for i in range ( len ( t ) - 1 ): plt . arrow ( x [ i ], y [ i ], Vx [ i ] / 10 , Vy [ i ] / 10 , head_width = 0.03 , head_length = 0.03 , color = \"blue\" ) plt . text ( x [ i ] + 0.05 , y [ i ], r \"$\\vec {v} $\" + str ( i + 1 ), color = \"blue\" ) # L\u00e9gende plt . text ( 0.1 , 0.8 , \"Echelle 1 cm $\\leftrightarrow$ 10 cm/s\" , color = \"blue\" ) plt . show () Rep\u00e9rer dans le programme les lignes correspondant aux donn\u00e9es extraites du pointage. Rep\u00e9rer de m\u00eame la (ou les) ligne(s) permettant de repr\u00e9senter les vecteurs vitesse. Extraire de cette (ou ces) ligne(s) le facteur de repr\u00e9sentation des vecteurs vitesse. Proposer une modification du programme pour avoir un facteur de repr\u00e9sentation des vecteurs vitesse de 1/15.", "title": "Chapitre 3"}, {"location": "python/#chapitre-4", "text": "Exercice 4 : Calculer une force d'interaction gravitationnelle (chap10 ex 9 p 201) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 G = 6.67E-11 # en N.m2/kg2 d = float ( input ( \"d (en m) = \" )) m1 = float ( input ( \"m1 (en kg) = \" )) F = G * m1 * m2 / d ** 2 print ( \"F =\" , F , \"N\" ) Syntaxe : indiquer \u00e0 quoi correspond le E \u00e0 la ligne 1. \u00c9crire la ligne 4 permettant de demander m2 \u00e0 l'utilisateur. Ex\u00e9cuter le script pour calculer la valeur de la force de l'exercice 9 p 201 (en utilisant E pour saisir ais\u00e9ment les valeurs de la formule). Donner le r\u00e9sultat en notation scientifique avec 2 chiffres significatifs.", "title": "Chapitre 4"}, {"location": "python/#chapitre-5", "text": "Exercice 5 : Galil\u00e9e et la chute des corps (chap11 ex 14 p 218) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 t = [ 0 , 0.04 , 0.08 , 0.12 , 0.16 , 0.20 , 0.24 ] d = [ 4.9 * dt ** 2 for dt in t ] v = [( d [ i + 1 ] - d [ i ]) / ( t [ i + 1 ] - t [ i ]) for i in range ( len ( t ) - 1 )] l = [ round ( 2 * vitesse , 1 ) for vitesse in v ] print ( \"t (en s):\" , t ) print ( \"d (en m):\" , d ) print ( \"v (en m/s):\" , v ) print ( \"l (en cm)\" , l ) Quelle ligne du programme utilise la relation de proportionnalit\u00e9 \u00e9voqu\u00e9e par Galil\u00e9e ? Quelle est la syntaxe Python pour \u00e9lever au carr\u00e9 ? Remplir le tableau de l'exercice 14 p 218 \u00e0 la main (et calculatrice) puis ex\u00e9cuter le script pour v\u00e9rifier les r\u00e9ponses. Apr\u00e8s ex\u00e9cution du script python t , d , v et l sont des listes de valeurs. En se r\u00e9f\u00e9rant \u00e0 l'\u00e9nonc\u00e9 de l'exercice 14 p218, indiquer \u00e0 quoi correspondent les valeurs de la liste l .", "title": "Chapitre 5"}, {"location": "python/#chapitre-6", "text": "Exercice 6 : Masse approch\u00e9e d'un atome (chap03 ex 9 p 72) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # Masse approch\u00e9e d'un atome Z = int ( input ( \"Nombre de protons: \" )) rep = int ( input ( \"Nombre d'\u00e9lectrons: \" )) if rep != Z : print ( \"Faux. Un atome est neutre donc il a autant d'\u00e9lectrons que de protons.\" ) N = int ( input ( \"Nombre de neutrons: \" )) m_nucleon = 1.67E-27 m_electron = m_nucleon / 1836 m_noyau = m_nucleon * ( Z + N ) m_atome = m_noyau + m_electron * Z print ( \"masse du noyau :\" , m_noyau ) print ( \"masse de l'atome :\" , m_atome ) Syntaxe : indiquer la signification de != dans le test effectu\u00e9 \u00e0 la ligne 4. Ex\u00e9cuter le script pour r\u00e9pondre \u00e0 l'exercice 9 p 72. Quel est le calcul simple permettant d'obtenir la masse approch\u00e9e d'un atome ? Pourquoi parle-t-on de masse approch\u00e9e ?", "title": "Chapitre 6"}, {"location": "python/#chapitre-7", "text": "Exercice 7 : Obtenir une configuration \u00e9lectronique (chap04 ex 33 p 95) \u00c9nonc\u00e9 Correction Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # Obtenir une configuration \u00e9lectronique (capytale c04e33p95) Z = int ( input ( \"Que vaut Z (Z < 18) ?\" )) ne = Z # (1) # initialisation: les sous-couches \u00e9lectroniques sont vides n1s = 0 n2s , n2p = 0 , 0 n3s , n3p = 0 , 0 # Remplir sous-couche 1s while ( ne > 0 ) and ( n1s < 2 ): # (4) n1s += 1 # (2) ne -= 1 # (3) if ( ne == 0 ) or ( n1s == 2 ): config = \" 1s\" + str ( n1s ) # (5) # Remplir sous-couche 2s while ( ne > 0 ) and ( n2s < 2 ): n2s += 1 ne -= 1 if ( ne == 0 ) or ( n2s == 2 ): config = config + \" 2s\" + str ( n2s ) # (6) # Remplir sous-couche 2p while ( ne > 0 ) and ( n2p < 6 ): n2p += 1 ne -= 1 if ( ne == 0 ) or ( n2p == 6 ): config = config + \" 2p\" + str ( n2p ) # (7) # Remplir sous-couche 3s while ( ne > 0 ) and ( n3s < 2 ): n3s += 1 ne -= 1 if ( ne == 0 ) or ( n3s == 2 ): config = config + \" 3s\" + str ( n3s ) # (8) # Remplir sous-couche 3p if ne > 0 : print ( \"hors programme\" ) else : print ( \"Pour Z =\" , Z , \"la configuration \u00e9lectronique est\" , config ) Nombre d'\u00e9lectrons \u00e0 placer sur les diff\u00e9rentes sous-couches Incr\u00e9mente le nombre d'\u00e9lectrons sur la sous-couche 1s D\u00e9cr\u00e9mente le nombre total d'\u00e9lectrons restant \u00e0 placer Tant qu'il reste des \u00e9lectrons \u00e0 placer et que la sous-couche 1s n'est pas pleine, continuer de remplir la sous-couche 1s Commence une cha\u00eene de caract\u00e8res qui va d\u00e9buter par 1s suivi du nombre d'\u00e9lectrons sur cette sous couche. La fonction str() transforme un entier en chaine de caract\u00e8re Prolonge la cha\u00eene nomm\u00e9e config Prolonge la cha\u00eene nomm\u00e9e config Prolonge la cha\u00eene nomm\u00e9e config En utilisant le script d\u00e9terminer la configuration \u00e9lectronique de l'h\u00e9lium \\(He\\) (Z = 2) et du berrylium \\(Be\\) (Z = 4). Compl\u00e9ter le script pour la sous-couche 3p En utilisant le script d\u00e9terminer la configuration \u00e9lectronique de l'alluminium \\(A\\ell\\) (Z = 13). \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # Obtenir une configuration \u00e9lectronique (capytale c04e33p95) Z = int ( input ( \"Que vaut Z (Z < 18) ?\" )) ne = Z # (1) # initialisation: les sous-couches \u00e9lectroniques sont vides n1s = 0 n2s , n2p = 0 , 0 n3s , n3p = 0 , 0 # Remplir sous-couche 1s while ( ne > 0 ) and ( n1s < 2 ): # (4) n1s += 1 # (2) ne -= 1 # (3) if ( ne == 0 ) or ( n1s == 2 ): config = \" 1s\" + str ( n1s ) # (5) # Remplir sous-couche 2s while ( ne > 0 ) and ( n2s < 2 ): n2s += 1 ne -= 1 if ( ne == 0 ) or ( n2s == 2 ): config = config + \" 2s\" + str ( n2s ) # Remplir sous-couche 2p while ( ne > 0 ) and ( n2p < 6 ): n2p += 1 ne -= 1 if ( ne == 0 ) or ( n2p == 6 ): config = config + \" 2p\" + str ( n2p ) # Remplir sous-couche 3s while ( ne > 0 ) and ( n3s < 2 ): n3s += 1 ne -= 1 if ( ne == 0 ) or ( n3s == 2 ): config = config + \" 3s\" + str ( n3s ) # Remplir sous-couche 3p while ( ne > 0 ) and ( n3p < 6 ): n3p += 1 ne -= 1 if ( ne == 0 ) or ( n3p == 6 ): config = config + \" 3p\" + str ( n3p ) if ne > 0 : print ( \"hors programme\" ) else : print ( \"Pour Z =\" , Z , \"la configuration \u00e9lectronique est\" , config )", "title": "Chapitre 7"}, {"location": "python/#chapitre-8", "text": "Exercice 8 : Fonction p\u00e9riodique (chap12 ex 23 p 241) \u00c9nonc\u00e9 Ouvrir le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import matplotlib.pyplot as plt import numpy as np # Cr\u00e9ation d'une variable temps, t, dont 1000 valeurs sont comprises entre 0 et 0,1 seconde t = np . linspace ( 0 , 0.1 , 1000 ) # valeur .... f = 100 f1 = 100 # D\u00e9finition des fonctions y et y1 (et y2 \u00e0 compl\u00e9ter) y = 3 * np . sin ( 2 * np . pi * f * t ) y1 = 3 * np . sin ( 2 * np . pi * f1 * t ) + 3 * np . sin ( 4 * np . pi * f1 * t ) # Trac\u00e9 des courbes sous forme de graphiques empil\u00e9s dans une grille et mise en place de la l\u00e9gende plt . gcf () . subplots_adjust ( hspace = 0.8 ) # (1) plt . title ( \"Acquisition de deux signaux sonores\" ) # Trac\u00e9 de y plt . subplot ( 2 , 1 , 1 ) # (2) plt . xlabel ( \"$t$ (en s)\" ) plt . ylabel ( \"$y$\" ) plt . grid () plt . plot ( t , y , color = 'blue' ) # Trac\u00e9 de y1 plt . subplot ( 2 , 1 , 2 ) # (3) plt . plot ( t , y1 , color = 'red' ) plt . xlabel ( \"$t$ (en s)\" ) plt . ylabel ( \"$y_1$\" ) plt . grid () # Trac\u00e9 de y2 (\u00e0 compl\u00e9ter) # (4) # Affichage de la figure plt . show () height space (espace en hauteur) entre lignes de la grille. Au besoin, utiliser wspace comme width space pour r\u00e9gler l'espace en largeur entre colonnes. Dans une grille de 2 lignes x 1 colonne, la figure est plac\u00e9e en 1re ligne. \u00c0 modifier \u00e0 la question 6. Dans une grille de 2 lignes x 1 colonne, la figure est plac\u00e9e en 2e ligne. \u00c0 modifier \u00e0 la question 6. On peut \u00e9galement sauvegarder l'image dans le r\u00e9pertoire du script avec plt.savefig(\"image.png\") D\u00e9terminer graphiquement la p\u00e9riode de chacune des fonctions correspondant aux courbes Calculer la fr\u00e9quence de chacune de ces deux fonctions. Compl\u00e9ter le commentaire de la ligne 8 du programme. \u00c0 l\u2019aide de la repr\u00e9sentation temporelle de la fonction y , indiquer ce que repr\u00e9sente le nombre 3 dans la ligne 13 du programme. Sous le trac\u00e9 des deux fonctions pr\u00e9c\u00e9dentes, on souhaite tracer une nouvelle fonction y2 qui est sinuso\u00efdale, de p\u00e9riode T \u00e9gale \u00e0 0,020 s et d\u2019amplitude \u00e9gale \u00e0 4. Modifier le programme ( f2 = ? ; y2 = ? ; Trac\u00e9 de y2) pour afficher le trac\u00e9 des trois fonctions. Utiliser plt.subplot(3, 1, 1) , plt.subplot(3, 1, 2) et plt.subplot(3, 1, 3) pour placer les sous figures dans une grille 3x1.", "title": "Chapitre 8"}, {"location": "python/#chapitre-9", "text": "Exercice 9 : D\u00e9crire des \u00e9tats physiques (chap06 ex 4 p 121) \u00c9nonc\u00e9 On a mesur\u00e9 la temp\u00e9rature au cours du temps lors de la solidification du cyclohexane. Ouvrir et tester le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # D\u00e9crire des \u00e9tats physiques import matplotlib.pyplot as plt t = [ 0 , 2 , 4 , 6 , 8 , 10 ] # (en min) T = 16.0 , 11.5 , 6.5 , 6.5 , 6.0 , 1.51 # (en \u00b0C) # pr\u00e9paration de la zone graphique plt . grid () plt . title ( \"Donner un titre\" ) plt . xlabel ( \".....(en min)\" ) plt . ylabel ( \"..... (en \u00b0C)\" ) # trac\u00e9 des points de la trajectoire plt . plot ( t , T , 'ro-' ) plt . show () Syntaxe : Python est sensible \u00e0 la \"casse\" c'est-\u00e0-dire qu'il distingue les majuscules et les minuscules. Dans ce script que repr\u00e9sentent les variables t et T ? Lignes 7, 8 et 9 donner un titre au graphique et annoter les axes. Ex\u00e9cuter le script pour tracer le graphique repr\u00e9sentant l\u2019\u00e9volution de la temp\u00e9rature au cours du temps. Identifier les \u00e9tats physiques par lesquels passe le cyclohexane au cours du temps.", "title": "Chapitre 9"}, {"location": "python/#chapitre-10", "text": "Exercice 10 : Chromatographie sur couche mince (CCM) \u00c9nonc\u00e9 Script python Objectifs : Savoir lire un chromatogramme CCM. Identifier les constituants d\u2019un m\u00e9lange par comparaison avec des esp\u00e8ces de r\u00e9f\u00e9rence. Utiliser un programme Python pour s\u2019entra\u00eener. Travail demand\u00e9: Lancer le programme Python dans Capytale ( code: 7e20-6893103 ) puis ex\u00e9cuter une cellule apr\u00e8s l'autre. Observer le chromatogramme g\u00e9n\u00e9r\u00e9. Analyser le d\u00e9p\u00f4t de synth\u00e8se : d\u2019apr\u00e8s les positions des taches migr\u00e9es du m\u00e9lange (Synth\u00e8se), indiquer si l'esp\u00e8ce A est pr\u00e9sente. Indiquer si l'esp\u00e8ce B est pr\u00e9sente. V\u00e9rifier vos r\u00e9ponses gr\u00e2ce \u00e0 la correction automatique propos\u00e9e par le programme. Refaire plusieurs fois la proc\u00e9dure. Import des modules et param\u00e8tres de la plaque \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import matplotlib.pyplot as plt import random # Param\u00e8tres de la plaque largeur_plaque = 4 # cm hauteur_plaque = 8 # cm ligne_depot = 1 # cm # Front de l'\u00e9luant (al\u00e9atoire \u00e0 chaque exercice) front = random . uniform ( 6 , 7.5 ) # (1) # Positions horizontales des d\u00e9p\u00f4ts # 1 : R\u00e9f\u00e9rence A # 2 : R\u00e9f\u00e9rence B # 3 : Produit de synth\u00e8se La m\u00e9thode uniform () renvoie un nombre flottant al\u00e9atoire entre les deux nombres sp\u00e9cifi\u00e9s (tous deux inclus). Simulation de l'existence et des positions al\u00e9atoires des taches \ud83d\udc0d Script Python 16 17 18 19 20 21 22 23 24 25 26 # Rf des r\u00e9f\u00e9rences (valeurs r\u00e9alistes et bien s\u00e9par\u00e9es) Rf_A = round ( random . uniform ( 0.2 , 0.5 ), 2 ) Rf_B = round ( random . uniform ( 0.55 , 0.9 ), 2 ) # Pr\u00e9sence ou non des esp\u00e8ces dans le m\u00e9lange synth\u00e9tis\u00e9 contient_A = random . choice ([ True , False ]) contient_B = random . choice ([ True , False ]) # ordonn\u00e9es des taches yA = ligne_depot + Rf_A * ( front - ligne_depot ) yB = ligne_depot + Rf_B * ( front - ligne_depot ) Affichage de la chromatographie \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 plt . figure ( figsize = ( 4 , 8 )) # Plaque CCM (un rectangle est un polygone ferm\u00e9) x_rect = [ 0 , largeur_plaque , largeur_plaque , 0 , 0 ] # (1) y_rect = [ 0 , 0 , hauteur_plaque , hauteur_plaque , 0 ] # (2) plt . fill ( x_rect , y_rect , facecolor = 'white' , edgecolor = 'black' , linewidth = 2 ) # (3) # Front de l'\u00e9luant plt . plot ([ 0 , largeur_plaque ], [ front , front ], '--' , color = 'grey' , label = \"Front de l'\u00e9luant\" ) # Ligne de d\u00e9p\u00f4ts plt . plot ([ 0 , largeur_plaque ], [ ligne_depot , ligne_depot ], '-' , color = 'black' ) # D\u00e9p\u00f4ts plt . scatter ( 1 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 1 - 0.3 , 0.5 , 'R\u00e9f A' , fontsize = 12 ) plt . scatter ( 2 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 2 - 0.3 , 0.5 , 'R\u00e9f B' , fontsize = 12 ) plt . scatter ( 3 , ligne_depot , s = 400 , color = 'white' , edgecolor = 'black' ) plt . text ( 3 - 0.5 , 0.5 , 'Synth\u00e8se' , fontsize = 12 ) # Tracer les taches migr\u00e9es plt . scatter ( 1 , yA , s = 400 , color = 'lightgrey' , edgecolor = 'black' ) plt . scatter ( 2 , yB , s = 400 , color = 'grey' , edgecolor = 'black' ) if contient_A : plt . scatter ( 3 , yA , s = 400 , color = 'lightgrey' , edgecolor = 'black' ) if contient_B : plt . scatter ( 3 , yB , s = 400 , color = 'grey' , edgecolor = 'black' ) plt . xlim ( 0 , largeur_plaque ) plt . ylim ( 0 , hauteur_plaque ) plt . axis ( 'off' ) plt . title ( \"Chromatographie CCM\" ) plt . legend () plt . show () liste des abscisses des points du polygone ferm\u00e9 liste des ordonn\u00e9es des points du polygone ferm\u00e9 plt.fill() attend deux listes : la liste des abscisses et la liste des ordonn\u00e9es des points du polygone Questions \ud83d\udc0d Script Python 1 2 3 4 print ( \" \\n Analyse du produit de synth\u00e8se :\" ) reponse_A = input ( \"Le produit contient-il l'esp\u00e8ce A ? (oui/non) \" ) reponse_B = input ( \"Le produit contient-il l'esp\u00e8ce B ? (oui/non) \" ) Correction \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 # Correction if ( reponse_A == 'oui' and contient_A ) or ( reponse_A == 'non' and not contient_A ): print ( \"\u2705 R\u00e9ponse correcte pour l'esp\u00e8ce A.\" ) else : print ( \"\u274c R\u00e9ponse incorrecte pour l'esp\u00e8ce A.\" ) if ( reponse_B == 'oui' and contient_B ) or ( reponse_B == 'non' and not contient_B ): print ( \"\u2705 R\u00e9ponse correcte pour l'esp\u00e8ce B.\" ) else : print ( \"\u274c R\u00e9ponse incorrecte pour l'esp\u00e8ce B.\" ) print ( \"Exercice termin\u00e9. \\n \" )", "title": "Chapitre 10"}, {"location": "python/#chapitre-11", "text": "Exercice 11 : R\u00e9fraction \u00c9nonc\u00e9 Script python Objectifs : Savoir simuler un ph\u00e9nom\u00e8ne de r\u00e9fraction. Savoir donner un r\u00e9sultat en ayant un regard critique sur la pr\u00e9cision. Utiliser un programme Python pour s\u2019entra\u00eener. Travail demand\u00e9: Lancer le programme Python dans Capytale ( code: 892c-6894267 ) puis ex\u00e9cuter une cellule apr\u00e8s l'autre. Saisir les param\u00e8tres souhait\u00e9s (angle du rayon incident et indice des milieux) puis simuler le trajet du faisceau lumineux. V\u00e9rifier l'angle de r\u00e9fraction \u00e0 l'aide de la loi de Snell-Descartes Faire la partie compl\u00e9mentaire concernant la pr\u00e9cision du r\u00e9sultat. V\u00e9rifier vos r\u00e9ponses gr\u00e2ce \u00e0 la correction automatique propos\u00e9e par le programme. Refaire plusieurs fois la proc\u00e9dure. Import des modules \ud83d\udc0d Script Python 1 2 3 import numpy as np import matplotlib.pyplot as plt import matplotlib.patches as patches D\u00e9finition de nouvelles fonctions \ud83d\udc0d Script Python 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # Fonction de calcul de l'angle de r\u00e9fraction def calcul_refraction ( n1 , n2 , i_deg ): i_rad = np . radians ( i_deg ) sin_r = n1 / n2 * np . sin ( i_rad ) if abs ( sin_r ) > 1 : return None # R\u00e9flexion totale else : r_rad = np . arcsin ( sin_r ) r_deg = np . degrees ( r_rad ) return r_deg # Fonction de trac\u00e9 def tracer_refraction ( n1 , n2 , angle_incident ): angle_refracte = calcul_refraction ( n1 , n2 , angle_incident ) fig , ax = plt . subplots ( figsize = ( 8 , 8 )) # Trac\u00e9 du demi-cylindre (face courbe en bas) demi_cercle = patches . Wedge ( center = ( 0 , 0 ), r = 1 , theta1 = 180 , theta2 = 360 , facecolor = 'lightblue' , edgecolor = 'black' , alpha = 0.3 ) ax . add_patch ( demi_cercle ) # Surface plane plt . plot ([ - 1 , 1 ], [ 0 , 0 ], color = 'k' , alpha = 0.3 ) # Trac\u00e9 du rapporteur gradu\u00e9 for angle in range ( - 90 , 91 , 5 ): rad = np . radians ( angle ) x = np . sin ( rad ) y = np . cos ( rad ) ax . plot ([ 0 , x ], [ 0 , y ], color = 'lightgray' , lw = 0.5 ) ax . plot ([ 0 , - x ], [ 0 , - y ], color = 'lightgray' , lw = 0.5 ) if angle % 30 == 0 : plt . text ( 1.1 * np . sin ( rad ), 1.1 * np . cos ( rad ), f \" { abs ( angle ) } \u00b0\" , ha = 'center' , va = 'center' , fontsize = 10 ) plt . text ( - 1.1 * np . sin ( rad ), - 1.1 * np . cos ( rad ), f \" { abs ( angle ) } \u00b0\" , ha = 'center' , va = 'center' , fontsize = 10 ) # Rayon incident i_rad = np . radians ( angle_incident ) xi = - 2 * np . sin ( i_rad ) yi = 2 * np . cos ( i_rad ) ax . plot ([ xi , 0 ], [ yi , 0 ], color = 'red' , label = \"Rayon incident\" ) # Normale ax . plot ([ 0 , 0 ], [ - 1.2 , 1.2 ], 'k--' , alpha = 0.5 ) # Rayon r\u00e9fract\u00e9 if angle_refracte is not None : r_rad = np . radians ( angle_refracte ) xr = np . sin ( r_rad ) yr = - np . cos ( r_rad ) ax . plot ([ 0 , xr ], [ 0 , yr ], color = 'blue' , label = \"Rayon r\u00e9fract\u00e9\" ) plt . title ( f \"i = { angle_incident } \u00b0 ; r = { round ( angle_refracte , 1 ) } \u00b0\" ) else : plt . title ( f \"i = { angle_incident } \u00b0 ; R\u00e9flexion totale\" ) ax . set_xlim ( - 1.5 , 1.5 ) ax . set_ylim ( - 1.5 , 1.5 ) ax . set_aspect ( 'equal' ) plt . legend () plt . grid ( False ) ax . set_xticks ([]) ax . set_yticks ([]) plt . show () Simulation \ud83d\udc0d Script Python 67 68 69 70 71 72 # Exemple n_air = 1.00 n_plexiglas = 1.33 angle_incident = 70.0 tracer_refraction ( n_air , n_plexiglas , angle_incident ) Questions et correction \ud83d\udc0d Script Python 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 from random import choice r = calcul_refraction ( n_air , n_plexiglas , angle_incident ) A = \"a) La pr\u00e9cision d'un r\u00e9sultat d\u00e9pend de la pr\u00e9cision des donn\u00e9es utilis\u00e9es ? (oui/non) \" B = \"a) La pr\u00e9cision d'un r\u00e9sultat d\u00e9pend du nombre de d\u00e9cimales affich\u00e9es par la calculatrice ? (oui/non) \" C = f \"b) r = { r } \u00b0 est pr\u00e9f\u00e9rable \u00e0 r = { r : .1f } \u00b0 car \u00abc'est plus pr\u00e9cis\u00bb (oui/non) \" D = f \"b) r = { r : .1f } \u00b0 est pr\u00e9f\u00e9rable \u00e0 r = { r } car pr\u00e9tendre \u00eatre plus pr\u00e9cis est illusoire (oui/non) \" Q1 , Q2 = choice ([ A , B ]), choice ([ C , D ]) print ( \" \\n DONNER UN R\u00c9SULTAT NUM\u00c9RIQUE : \\n \" ) print ( f \"L'angle du rayon r\u00e9fract\u00e9 est de { r } degr\u00e9s ou de { r : .1f } degr\u00e9s ?\" ) reponse_1 = input ( Q1 ) reponse_2 = input ( Q2 ) # Correction if ( Q1 == A and reponse_1 == 'oui' ) or ( Q1 == B and reponse_1 == 'non' ): print ( \"\u2705 R\u00e9ponse 1 correcte \\n \" ) else : print ( \"\u274c R\u00e9ponse 1 incorrecte \\n \" ) if ( Q2 == C and reponse_2 == 'non' ) or ( Q2 == D and reponse_2 == 'oui' ): print ( \"\u2705 R\u00e9ponse 2 correcte \\n \" ) else : print ( \"\u274c R\u00e9ponse 2 incorrecte \\n \" ) print ( \"Exercice termin\u00e9. \\n \" )", "title": "Chapitre 11"}, {"location": "python/#chapitre-12", "text": "Exercice 12 : Lentille \u00c9nonc\u00e9 Ouvrir et tester le script suivant dans Capytale ( code : ): \ud83d\udc0d Script Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Fonction permettant de calculer la taille de l'image def calculer_taille_image ( AB , OA , OAprime ): AprimeBprime = AB * OAprime / OA return AprimeBprime # Les valeurs sont fournies par l'utilisateur AB = float ( input ( \"Donner la taille de l'objet AB en m\u00e8tre : \\n \" )) OA = float ( input ( \"Donner la distance OA en m\u00e8tre : \\n \" )) OAprime = float ( input ( \"Donner la distance OA' en m\u00e8tre : \\n \" )) # Calcul et affichage du r\u00e9sultat resultat = calculer_taille_image ( AB , OA , OAprime ) print ( \"La taille de l'image A'B' est\" , resultat , \"m.\" ) \u00c9crire un nouveau programme comportant la fonction calculer_position_image(AB, OA, AprimeBprime) qui permet de calculer OA\u2019 connaissant AB, OA et A'B' qui seront les valeurs fournies par l'utilisateur. Adapter la partie Calcul et affichage du r\u00e9sultat pour afficher la position de l'image.", "title": "Chapitre 12"}, {"location": "python/#chapitre-14", "text": "Exercice 13 : Parafoudre (chap16 ex 28 p320) \u00c9nonc\u00e9 R\u00e9aliser l'exercice dans Capytale", "title": "Chapitre 14"}, {"location": "tableau-periodique/", "text": "Tableau p\u00e9riodique \u2693\ufe0e Ouvrir dans un nouvel onglet", "title": "Tableau p\u00e9riodique"}, {"location": "tableau-periodique/#tableau-periodique", "text": "Ouvrir dans un nouvel onglet", "title": "Tableau p\u00e9riodique"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/", "text": "Chapitre 1: Composition d'un syst\u00e8me chimique \u2693\ufe0e 1. D\u00e9terminer une quantit\u00e9 de mati\u00e8re \u2693\ufe0e 2. Concentration d'une solution \u2693\ufe0e 3. La loi de BEER LAMBERT \u2693\ufe0e 3.1. Pour commencer en douceur \u2693\ufe0e 3.2. Dosage par \u00e9talonnage \u2693\ufe0e 3.3 Tr\u00e8s complet \u2693\ufe0e", "title": "Chapitre 1: Composition d'un syst\u00e8me chimique"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#chapitre-1-composition-dun-systeme-chimique", "text": "", "title": "Chapitre 1: Composition d'un syst\u00e8me chimique"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#1-determiner-une-quantite-de-matiere", "text": "", "title": "1. D\u00e9terminer une quantit\u00e9 de mati\u00e8re"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#2-concentration-dune-solution", "text": "", "title": "2. Concentration d'une solution"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#3-la-loi-de-beer-lambert", "text": "", "title": "3. La loi de BEER LAMBERT"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#31-pour-commencer-en-douceur", "text": "", "title": "3.1. Pour commencer en douceur"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#32-dosage-par-etalonnage", "text": "", "title": "3.2. Dosage par \u00e9talonnage"}, {"location": "vid%C3%A9os/chapitre-01-composition-d-un-syst%C3%A8me-chimique/#33-tres-complet", "text": "", "title": "3.3 Tr\u00e8s complet"}, {"location": "vid%C3%A9os/chapitre-02-de-la-structure-a-la-polarite-d-une-entite/", "text": "Chapitre 2: De la structure \u00e0 la polarit\u00e9 d'une entit\u00e9 \u2693\ufe0e 1. D\u00e9terminer la polarit\u00e9 d'une mol\u00e9cule \u2693\ufe0e 2. Mol\u00e9cule polaire ou apolaire ? \u2693\ufe0e", "title": "Chapitre 2: De la structure \u00e0 la polarit\u00e9 d'une entit\u00e9"}, {"location": "vid%C3%A9os/chapitre-02-de-la-structure-a-la-polarite-d-une-entite/#chapitre-2-de-la-structure-a-la-polarite-dune-entite", "text": "", "title": "Chapitre 2: De la structure \u00e0 la polarit\u00e9 d'une entit\u00e9"}, {"location": "vid%C3%A9os/chapitre-02-de-la-structure-a-la-polarite-d-une-entite/#1-determiner-la-polarite-dune-molecule", "text": "", "title": "1. D\u00e9terminer la polarit\u00e9 d'une mol\u00e9cule"}, {"location": "vid%C3%A9os/chapitre-02-de-la-structure-a-la-polarite-d-une-entite/#2-molecule-polaire-ou-apolaire", "text": "", "title": "2. Mol\u00e9cule polaire ou apolaire ?"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/", "text": "Chapitre 3: Coh\u00e9sion et dissolution des solides \u2693\ufe0e 1. Coh\u00e9sion des solides ioniques \u2693\ufe0e 2. Coh\u00e9sion des solides mol\u00e9culaires \u2693\ufe0e 3. La liaison hydrog\u00e8ne \u2693\ufe0e 4. Dissolution d'un cristal ionique \u2693\ufe0e 5. Les cristaux ioniques et leur dissolution \u2693\ufe0e 6. Dissolution d'un solide ionique \u2693\ufe0e", "title": "Chapitre 3: Coh\u00e9sion et dissolution des solides"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#chapitre-3-cohesion-et-dissolution-des-solides", "text": "", "title": "Chapitre 3: Coh\u00e9sion et dissolution des solides"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#1-cohesion-des-solides-ioniques", "text": "", "title": "1. Coh\u00e9sion des solides ioniques"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#2-cohesion-des-solides-moleculaires", "text": "", "title": "2. Coh\u00e9sion des solides mol\u00e9culaires"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#3-la-liaison-hydrogene", "text": "", "title": "3. La liaison hydrog\u00e8ne"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#4-dissolution-dun-cristal-ionique", "text": "", "title": "4. Dissolution d'un cristal ionique"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#5-les-cristaux-ioniques-et-leur-dissolution", "text": "", "title": "5. Les cristaux ioniques et leur dissolution"}, {"location": "vid%C3%A9os/chapitre-03-cohesion-et-dissolution-des-solides/#6-dissolution-dun-solide-ionique", "text": "", "title": "6. Dissolution d'un solide ionique"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/", "text": "Chapitre 4: Images et lentilles \u2693\ufe0e 1. Mise au point de l'appareil photo \u2693\ufe0e 2. Accommodation de l'\u0153il \u2693\ufe0e 3. Construction des images \u2693\ufe0e 4. Relations de conjugaison et de grandissement \u2693\ufe0e", "title": "Chapitre 4: Images et lentilles"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/#chapitre-4-images-et-lentilles", "text": "", "title": "Chapitre 4: Images et lentilles"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/#1-mise-au-point-de-lappareil-photo", "text": "", "title": "1. Mise au point de l'appareil photo"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/#2-accommodation-de-lil", "text": "", "title": "2. Accommodation de l'\u0153il"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/#3-construction-des-images", "text": "", "title": "3. Construction des images"}, {"location": "vid%C3%A9os/chapitre-04-images-et-lentilles/#4-relations-de-conjugaison-et-de-grandissement", "text": "", "title": "4. Relations de conjugaison et de grandissement"}, {"location": "vid%C3%A9os/chapitre-05-les-couleurs/", "text": "Chapitre 5: Les couleurs \u2693\ufe0e 1. Synth\u00e8se additive et soustractive \u2693\ufe0e", "title": "Chapitre 5: Les couleurs"}, {"location": "vid%C3%A9os/chapitre-05-les-couleurs/#chapitre-5-les-couleurs", "text": "", "title": "Chapitre 5: Les couleurs"}, {"location": "vid%C3%A9os/chapitre-05-les-couleurs/#1-synthese-additive-et-soustractive", "text": "", "title": "1. Synth\u00e8se additive et soustractive"}, {"location": "vid%C3%A9os/chapitre-06-la-lumiere/", "text": "Chapitre 6: La lumi\u00e8re (onde et particule) \u2693\ufe0e 1. Dualit\u00e9 onde/corpuscule \u2693\ufe0e", "title": "Chapitre 6: La lumi\u00e8re (onde et particule)"}, {"location": "vid%C3%A9os/chapitre-06-la-lumiere/#chapitre-6-la-lumiere-onde-et-particule", "text": "", "title": "Chapitre 6: La lumi\u00e8re (onde et particule)"}, {"location": "vid%C3%A9os/chapitre-06-la-lumiere/#1-dualite-ondecorpuscule", "text": "", "title": "1. Dualit\u00e9 onde/corpuscule"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/", "text": "Chapitre 7: Structure des compos\u00e9s organiques \u2693\ufe0e 1. Formules et mod\u00e8les mol\u00e9culaires \u2693\ufe0e 2. Convertir une formule semi-d\u00e9velopp\u00e9e en formule d\u00e9velopp\u00e9e \u2693\ufe0e Capsule 1 \u2693\ufe0e Capsule 2 \u2693\ufe0e Capsule 3 \u2693\ufe0e 3. Correction exercice formule brute, semi-d\u00e9velopp\u00e9e et d\u00e9velopp\u00e9e \u2693\ufe0e 4. Nomenclature \u2693\ufe0e 5. Spectroscopie infrarouge \u2693\ufe0e", "title": "Chapitre 7: Structure des compos\u00e9s organiques"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#chapitre-7-structure-des-composes-organiques", "text": "", "title": "Chapitre 7: Structure des compos\u00e9s organiques"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#1-formules-et-modeles-moleculaires", "text": "", "title": "1. Formules et mod\u00e8les mol\u00e9culaires"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#2-convertir-une-formule-semi-developpee-en-formule-developpee", "text": "", "title": "2. Convertir une formule semi-d\u00e9velopp\u00e9e en formule d\u00e9velopp\u00e9e"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#capsule-1", "text": "", "title": "Capsule 1"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#capsule-2", "text": "", "title": "Capsule 2"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#capsule-3", "text": "", "title": "Capsule 3"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#3-correction-exercice-formule-brute-semi-developpee-et-developpee", "text": "", "title": "3. Correction exercice formule brute, semi-d\u00e9velopp\u00e9e et d\u00e9velopp\u00e9e"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#4-nomenclature", "text": "", "title": "4. Nomenclature"}, {"location": "vid%C3%A9os/chapitre-07-structure-des-composes-organiques/#5-spectroscopie-infrarouge", "text": "", "title": "5. Spectroscopie infrarouge"}, {"location": "vid%C3%A9os/chapitre-08-synthese-de-composes-organiques/", "text": "Chapitre 8: Synth\u00e8se de compos\u00e9s organiques \u2693\ufe0e 1. Synth\u00e8se organique \u2693\ufe0e 2. Banc Kofler \u2693\ufe0e 3. Chromatographie \u2693\ufe0e", "title": "Chapitre 8: Synth\u00e8se de compos\u00e9s organiques"}, {"location": "vid%C3%A9os/chapitre-08-synthese-de-composes-organiques/#chapitre-8-synthese-de-composes-organiques", "text": "", "title": "Chapitre 8: Synth\u00e8se de compos\u00e9s organiques"}, {"location": "vid%C3%A9os/chapitre-08-synthese-de-composes-organiques/#1-synthese-organique", "text": "", "title": "1. Synth\u00e8se organique"}, {"location": "vid%C3%A9os/chapitre-08-synthese-de-composes-organiques/#2-banc-kofler", "text": "", "title": "2. Banc Kofler"}, {"location": "vid%C3%A9os/chapitre-08-synthese-de-composes-organiques/#3-chromatographie", "text": "", "title": "3. Chromatographie"}, {"location": "vid%C3%A9os/chapitre-09-champs-gravitationnels-et-electriques/", "text": "Chapitre 9: Champs gravitationnels et \u00e9lectriques \u2693\ufe0e 1. Cartographier un champ \u00e9lectrostatique \u2693\ufe0e 2. Interactions et champs \u2693\ufe0e", "title": "Chapitre 9: Champs gravitationnels et \u00e9lectriques"}, {"location": "vid%C3%A9os/chapitre-09-champs-gravitationnels-et-electriques/#chapitre-9-champs-gravitationnels-et-electriques", "text": "", "title": "Chapitre 9: Champs gravitationnels et \u00e9lectriques"}, {"location": "vid%C3%A9os/chapitre-09-champs-gravitationnels-et-electriques/#1-cartographier-un-champ-electrostatique", "text": "", "title": "1. Cartographier un champ \u00e9lectrostatique"}, {"location": "vid%C3%A9os/chapitre-09-champs-gravitationnels-et-electriques/#2-interactions-et-champs", "text": "", "title": "2. Interactions et champs"}, {"location": "vid%C3%A9os/chapitre-10-mouvement/", "text": "Chapitre 10: Mouvement \u2693\ufe0e 1. Vitesse et variation de vitesse \u2693\ufe0e 2. Forces et vitesses \u2693\ufe0e 3. Force de gravitation et force \u00e9lectrostatique \u2693\ufe0e", "title": "Chapitre 10: Mouvement"}, {"location": "vid%C3%A9os/chapitre-10-mouvement/#chapitre-10-mouvement", "text": "", "title": "Chapitre 10: Mouvement"}, {"location": "vid%C3%A9os/chapitre-10-mouvement/#1-vitesse-et-variation-de-vitesse", "text": "", "title": "1. Vitesse et variation de vitesse"}, {"location": "vid%C3%A9os/chapitre-10-mouvement/#2-forces-et-vitesses", "text": "", "title": "2. Forces et vitesses"}, {"location": "vid%C3%A9os/chapitre-10-mouvement/#3-force-de-gravitation-et-force-electrostatique", "text": "", "title": "3. Force de gravitation et force \u00e9lectrostatique"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/", "text": "Chapitre 11: Ph\u00e9nom\u00e8nes m\u00e9caniques et \u00e9nergie \u2693\ufe0e 1. Le th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique \u2693\ufe0e 2. Exercice th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique \u2693\ufe0e 3. \u00c9nergie potentielle et \u00e9nergie m\u00e9canique \u2693\ufe0e 4. Exercice energie m\u00e9canique \u2693\ufe0e", "title": "Chapitre 11: Ph\u00e9nom\u00e8nes m\u00e9caniques et \u00e9nergie"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/#chapitre-11-phenomenes-mecaniques-et-energie", "text": "", "title": "Chapitre 11: Ph\u00e9nom\u00e8nes m\u00e9caniques et \u00e9nergie"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/#1-le-theoreme-de-lenergie-cinetique", "text": "", "title": "1. Le th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/#2-exercice-theoreme-de-lenergie-cinetique", "text": "", "title": "2. Exercice th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/#3-energie-potentielle-et-energie-mecanique", "text": "", "title": "3. \u00c9nergie potentielle et \u00e9nergie m\u00e9canique"}, {"location": "vid%C3%A9os/chapitre-11-phenomenes-mecaniques-et-energie/#4-exercice-energie-mecanique", "text": "", "title": "4. Exercice energie m\u00e9canique"}, {"location": "vid%C3%A9os/chapitre-12-oxydo-reduction/", "text": "Chapitre 12: oxydo-r\u00e9duction \u2693\ufe0e 1. Identifier les couples \u2693\ufe0e", "title": "Chapitre 12: oxydo-r\u00e9duction"}, {"location": "vid%C3%A9os/chapitre-12-oxydo-reduction/#chapitre-12-oxydo-reduction", "text": "", "title": "Chapitre 12: oxydo-r\u00e9duction"}, {"location": "vid%C3%A9os/chapitre-12-oxydo-reduction/#1-identifier-les-couples", "text": "", "title": "1. Identifier les couples"}, {"location": "vid%C3%A9os/chapitre-13-avancement-et-titrage/", "text": "Chapitre 13: Avancement et titrage \u2693\ufe0e 1. Titrages \u2693\ufe0e", "title": "Chapitre 13: Avancement et titrage"}, {"location": "vid%C3%A9os/chapitre-13-avancement-et-titrage/#chapitre-13-avancement-et-titrage", "text": "", "title": "Chapitre 13: Avancement et titrage"}, {"location": "vid%C3%A9os/chapitre-13-avancement-et-titrage/#1-titrages", "text": "", "title": "1. Titrages"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/", "text": "Chapitre 14: \u00c9nergie \u00e9lectrique \u2693\ufe0e 1. Rappel des acquis de seconde \u2693\ufe0e Les notions indispensables \u00e0 conna\u00eetre sur les circuits \u00e9lectriques \u2693\ufe0e Attention: Le sch\u00e9ma \u00e0 15:00 devait \u00eatre le m\u00eame que celui \u00e0 16:00 car \u00e0 15:00 le sens des fl\u00e8ches de tension \\(U_L\\) et \\(U_M\\) est faux. Les fl\u00e8ches devraient \u00eatre dans l'autre sens (c'est-\u00e0-dire en convention r\u00e9cepteur) pour avoir \\(U_G=U_L=U_M\\) . Convention r\u00e9cepteur ou g\u00e9n\u00e9rateur et loi d'Ohm \u2693\ufe0e R\u00e9viser la loi des n\u0153uds \u2693\ufe0e R\u00e9viser la loi des mailles \u2693\ufe0e Petit exercice pour r\u00e9viser les bases \u2693\ufe0e 2. Intensit\u00e9 du courant \u00e9lectrique \u2693\ufe0e 3. Source r\u00e9elle de tension \u2693\ufe0e Principe th\u00e9orique \u2693\ufe0e Exemple pratique \u2693\ufe0e 4. \u00c9nergie \u00e9lectrique \u2693\ufe0e Calculer l'\u00e9nergie \u00e9lectrique \u2693\ufe0e Calculer la dur\u00e9e \u2693\ufe0e 8. Rendement d'un convertisseur \u2693\ufe0e Principe th\u00e9orique \u2693\ufe0e Exemple pratique \u2693\ufe0e", "title": "Chapitre 14: \u00c9nergie \u00e9lectrique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#chapitre-14-energie-electrique", "text": "", "title": "Chapitre 14: \u00c9nergie \u00e9lectrique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#1-rappel-des-acquis-de-seconde", "text": "", "title": "1. Rappel des acquis de seconde"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#les-notions-indispensables-a-connaitre-sur-les-circuits-electriques", "text": "Attention: Le sch\u00e9ma \u00e0 15:00 devait \u00eatre le m\u00eame que celui \u00e0 16:00 car \u00e0 15:00 le sens des fl\u00e8ches de tension \\(U_L\\) et \\(U_M\\) est faux. Les fl\u00e8ches devraient \u00eatre dans l'autre sens (c'est-\u00e0-dire en convention r\u00e9cepteur) pour avoir \\(U_G=U_L=U_M\\) .", "title": "Les notions indispensables \u00e0 conna\u00eetre sur les circuits \u00e9lectriques"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#convention-recepteur-ou-generateur-et-loi-dohm", "text": "", "title": "Convention r\u00e9cepteur ou g\u00e9n\u00e9rateur et loi d'Ohm"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#reviser-la-loi-des-nuds", "text": "", "title": "R\u00e9viser la loi des n\u0153uds"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#reviser-la-loi-des-mailles", "text": "", "title": "R\u00e9viser la loi des mailles"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#petit-exercice-pour-reviser-les-bases", "text": "", "title": "Petit exercice pour r\u00e9viser les bases"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#2-intensite-du-courant-electrique", "text": "", "title": "2. Intensit\u00e9 du courant \u00e9lectrique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#3-source-reelle-de-tension", "text": "", "title": "3. Source r\u00e9elle de tension"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#principe-theorique", "text": "", "title": "Principe th\u00e9orique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#exemple-pratique", "text": "", "title": "Exemple pratique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#4-energie-electrique", "text": "", "title": "4. \u00c9nergie \u00e9lectrique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#calculer-lenergie-electrique", "text": "", "title": "Calculer l'\u00e9nergie \u00e9lectrique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#calculer-la-duree", "text": "", "title": "Calculer la dur\u00e9e"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#8-rendement-dun-convertisseur", "text": "", "title": "8. Rendement d'un convertisseur"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#principe-theorique_1", "text": "", "title": "Principe th\u00e9orique"}, {"location": "vid%C3%A9os/chapitre-14-energie-electrique/#exemple-pratique_1", "text": "", "title": "Exemple pratique"}, {"location": "vid%C3%A9os/chapitre-15-ondes/", "text": "Chapitre 15: Les ondes \u2693\ufe0e 1. Les ondes m\u00e9caniques progressives \u2693\ufe0e 2. Ondes sinuso\u00efdales et math\u00e9matiques \u2693\ufe0e", "title": "Chapitre 15: Les ondes"}, {"location": "vid%C3%A9os/chapitre-15-ondes/#chapitre-15-les-ondes", "text": "", "title": "Chapitre 15: Les ondes"}, {"location": "vid%C3%A9os/chapitre-15-ondes/#1-les-ondes-mecaniques-progressives", "text": "", "title": "1. Les ondes m\u00e9caniques progressives"}, {"location": "vid%C3%A9os/chapitre-15-ondes/#2-ondes-sinusoidales-et-mathematiques", "text": "", "title": "2. Ondes sinuso\u00efdales et math\u00e9matiques"}]}